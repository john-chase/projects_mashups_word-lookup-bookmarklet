/*! For license information please see main.js.LICENSE.txt */
(()=>{function e(){this.style.backgroundColor="yellow"}function t(){this.style.backgroundColor="transparent",this.classList.remove("def-tooltip")}function n(e){const t=e.target;(async e=>{e=(e=e.replace(/[\u2000-\u206F\u2E00-\u2E7F!"#$%&()*+,\.\/:;<=>?@\[\]^_`{|}~]/g,"")).replace(/'(.*?)'/g,"$1"),console.log(e);let t=await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${e}`);const n=`Sorry, we could not find "${e}" in the dictionary, or the service is down. You can try the search again at later time or head to the web instead.`;if(t.status>=200&&t.status<=299){let e=await t.json(),o="";if(e[0]){const t=e[0].word,n=e[0].meanings[0].partOfSpeech?e[0].meanings[0].partOfSpeech:"",i=e[0].phonetics.length&&e[0].phonetics[0].text?e[0].phonetics[0].text:"";return i.length&&(o=` (${i})`),`${t} - ${n}${o}: ${e[0].meanings[0].definitions[0].definition?e[0].meanings[0].definitions[0].definition:""}`}return n}return n})(e.target.innerText).then((e=>{t.setAttribute("data-tooltip",e),e.includes("Sorry, we could not find ")?t.classList.add("def-tooltip","def-tooltip-not-found"):t.classList.add("def-tooltip")}))}(()=>{document.head.appendChild(document.createElement("style")).innerText='\n    /*GENERAL*/ .p { border: 1px solid dodgerblue; border-radius: .5rem; padding: .5rem; margin: 1rem 5rem; font-size: 15px; line-height: 21px; } .hidden { display: none; } /*DEFINITION GROUP*/ .def-div { background-color: dodgerblue; position: fixed; z-index: 99999999; min-width: 100%; height: 32px; top: 0; text-align: left; } .def-span { padding: 0 0 12px 4px; text-align: center; color: blue; font-weight: bold; font-style: italic; margin: 0.5rem; } .def-help { font-style: italic; margin: 0.5rem; } /*TOOLTIPS*/ .def-tooltip { position: relative; transition: all 0.3s ease; text-decoration: none; cursor: grabbing; z-index: 999999; box-sizing: border-box; } .def-tooltip:after { content: attr(data-tooltip); position: absolute; left: 50%; top: 1rem; transform: translate3d(-50%, 1rem, 0); transition: all 0.3s ease; transition-delay: 1.2s; width: -webkit-max-content; width: -moz-max-content; width: max-content; max-width: 200px !important; opacity: 0; pointer-events: none; border-radius: 4px; background: dodgerblue; color: white; font-size: 11px; font-weight: bold; text-align: left; line-height: 14px; text-transform: none; white-space: pre-line; padding: 4px 8px; } .def-tooltip:hover { background-color: rgba(0, 0, 0, 0.12); } .def-tooltip:hover:after { opacity: 1; } .def-tooltip-not-found:after { color: white; font-weight: bold; background: red; } /*TOGGLE SWITCH*/ input[type=checkbox], .def-input { margin: 0; -webkit-appearance: none; appearance: none; padding: 0 0 0 30px; border-radius: 16px; background: radial-gradient(circle 12px, white 100%, transparent calc(100% + 1px)) #ccc -16px; transition: 0.3s ease-in-out; position: inherit; height: 32px; width: 64px; top: 0; bottom: 0; box-shadow: none; } .def-input::before { content: "OFF"; font: bold 12px/32px Verdana; color: white; text-shadow: 0 1px black; } .def-input:checked { padding: 0 0 0 8px; background-color: rgb(37, 151, 62); background-position: 16px; height: 32px; width: 64px; } .def-input:checked::before { content: "ON"; }\n    ';const o=document.getElementsByTagName("body")[0],i=document.createElement("div");i.classList.add("def-div"),o.insertBefore(i,o.firstChild);const a=document.createElement("label");i.appendChild(a);const d=document.createElement("span");d.classList.add("def-span"),d.innerText="Definitions",a.appendChild(d);const r=document.createElement("input");r.setAttribute("type","checkbox"),r.classList.add("def-input"),a.appendChild(r);const s=document.createElement("span");let l;s.classList.add("hidden","def-help"),s.innerText="Hover over a word to highlight, then click/tap to show definition tooltip.",a.appendChild(s);let p=document.getElementsByTagName("p"),c=[];const h=e=>{let t=(e=e.replace("&nbsp;"," ")).split(" "),n="";return t.forEach((e=>{n+=`<span>${e}</span> `})),n};r.onchange=()=>{if(r.checked){s.classList.remove("hidden");for(let o=0;o<p.length;o++)if(null!=p[o]&&""!==p[o].innerText){p[o].classList.add("p"),c.push(p[o].innerHTML),p[o].innerHTML=h(p[o].innerText),l=p[o].getElementsByTagName("span");for(let o=0;o<l.length;o++)l[o].onmouseover=e,l[o].onmouseout=t,l[o].onclick=n}}else{s.classList.add("hidden");for(let e=0;e<p.length;e++)null!=p[e]&&""!==p[e].innerText&&(p[e].classList.remove("p"),p[e].innerHTML=c[e])}}})()})();